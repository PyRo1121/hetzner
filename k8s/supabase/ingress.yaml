apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: supabase
  namespace: platform
  labels:
    app.kubernetes.io/name: supabase-ingress
    app.kubernetes.io/version: "2025.10"
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: supabase-stack
  annotations:
    # Ingress class and TLS
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt
    
    # Security headers
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256,ECDHE-RSA-AES128-GCM-SHA256,ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES256-GCM-SHA384"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    
    # Security and performance
    nginx.ingress.kubernetes.io/server-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: https:;" always;
    
    # Timeouts and buffering
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    
    # WebSocket support for Realtime
    nginx.ingress.kubernetes.io/proxy-set-headers: |
      X-Forwarded-Proto $scheme;
      X-Forwarded-For $proxy_add_x_forwarded_for;
      X-Real-IP $remote_addr;
      Host $host;
      Upgrade $http_upgrade;
      Connection "upgrade";
spec:
  tls:
    - hosts:
        - ${DOMAIN}
      secretName: supabase-tls
  rules:
    - host: ${DOMAIN}
      http:
        paths:
          - path: /auth/v1
            pathType: Prefix
            backend:
              service:
                name: gotrue
                port:
                  number: 9999
          - path: /rest/v1
            pathType: Prefix
            backend:
              service:
                name: postgrest
                port:
                  number: 3000
          - path: /realtime/v1
            pathType: Prefix
            backend:
              service:
                name: realtime
                port:
                  number: 4000
          - path: /storage/v1
            pathType: Prefix
            backend:
              service:
                name: storage-api
                port:
                  number: 5000