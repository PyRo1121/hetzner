apiVersion: apps/v1
kind: Deployment
metadata:
  name: storage-api
  namespace: platform
  labels:
    app: storage-api
    app.kubernetes.io/name: storage-api
    app.kubernetes.io/version: "2025.10"
    app.kubernetes.io/component: storage
    app.kubernetes.io/part-of: supabase-stack
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: storage-api
  template:
    metadata:
      labels:
        app: storage-api
        app.kubernetes.io/name: storage-api
        app.kubernetes.io/component: storage
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: storage-api
          image: supabase/storage-api:v1.11.9  # Updated to latest stable version
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          env:
            - name: ANON_KEY
              valueFrom:
                secretKeyRef:
                  name: supabase-secrets
                  key: ANON_KEY
            - name: SERVICE_KEY
              valueFrom:
                secretKeyRef:
                  name: supabase-secrets
                  key: SERVICE_ROLE_KEY
            - name: POSTGREST_URL
              value: "http://postgrest:3000"
            - name: PGRST_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: supabase-secrets
                  key: JWT_SECRET
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: supabase-secrets
                  key: DB_URL
            - name: FILE_SIZE_LIMIT
              value: "52428800"  # 50MB
            - name: STORAGE_BACKEND
              value: "s3"
            - name: GLOBAL_S3_BUCKET
              value: "supabase-storage"
            - name: REGION
              value: "us-east-1"
            - name: GLOBAL_S3_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: supabase-secrets
                  key: S3_ENDPOINT
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: supabase-secrets
                  key: S3_ACCESS_KEY
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: supabase-secrets
                  key: S3_SECRET_KEY
            - name: TENANT_ID
              value: "stub"
            - name: MULTITENANT
              value: "false"
            - name: LOG_LEVEL
              value: "info"
            - name: ENABLE_IMAGE_TRANSFORMATION
              value: "true"
            - name: IMGPROXY_URL
              value: "http://imgproxy:8080"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
          readinessProbe:
            httpGet:
              path: /status
              port: 5000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /status
              port: 5000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: storage-cache
              mountPath: /app/cache
      volumes:
        - name: tmp
          emptyDir: {}
        - name: storage-cache
          emptyDir:
            sizeLimit: 1Gi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - storage-api
                topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: storage-api
  namespace: platform
  labels:
    app: storage-api
    app.kubernetes.io/name: storage-api
    app.kubernetes.io/component: storage
    app.kubernetes.io/part-of: supabase-stack
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app: storage-api
  ports:
    - name: http
      port: 5000
      targetPort: 5000
      protocol: TCP