apiVersion: apps/v1
kind: Deployment
metadata:
  name: albion-dashboard
  namespace: albion-production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: albion-dashboard
  template:
    metadata:
      labels:
        app: albion-dashboard
    spec:
      containers:
      - name: albion-dashboard
        image: ghcr.io/pyro1121/hetzner:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: NEXT_PUBLIC_SUPABASE_URL
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: supabase-url
        - name: NEXT_PUBLIC_SUPABASE_ANON_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: supabase-anon-key
        - name: SUPABASE_SERVICE_ROLE_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: supabase-service-role-key
        - name: NEXTAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: nextauth-secret
        - name: NEXTAUTH_URL
          value: "https://pyro1121.com"
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: redis-url
        - name: CLOUDFLARE_ACCOUNT_ID
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: cloudflare-account-id
        - name: CLOUDFLARE_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: cloudflare-api-token
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: albion-dashboard
  namespace: albion-production
spec:
  selector:
    app: albion-dashboard
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: albion-dashboard-ingress
  namespace: albion-production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - pyro1121.com
    secretName: albion-tls
  rules:
  - host: pyro1121.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: albion-dashboard
            port:
              number: 80
